library(vegan)
library(rpart)
library(rpart.plot)
library(party)
library(randomForest)
library(ggplot2)
#setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/multivariate-analysis")
setwd("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/multivariate-analysis")
source("Biostats.R")
dat <- read.csv("Harney_Fishes_2007.csv", row.names = 1)
spp_N <- colSums(dat[,16:ncol(dat)])
spp_0 <- subset(spp_N, spp_N == 0)
omit <- names(spp_0)
dat2 <- dat[,!(colnames(dat) %in% omit)]
dat3 <- dat2[rowSums(dat2[,16:ncol(dat2)]) >0, ]
dat3$Herbaceous[is.na(dat3$Herbaceous)] <- 0
dat3$Ann_Herb[is.na(dat3$Ann_Herb)] <- 0
dat3 <- dat3[complete.cases(dat3$SiteLength),]
dat_final <- dat3
fish <- dat_final[,16:ncol(dat_final)]
env <- dat_final[,1:15]
fish_red <- drop.var(fish, min.fo=1)
fish_dens <- fish_red
for(i in 1:nrow(fish_red)){
fish_dens[i,] <- fish_red[i,]/dat_final$SiteLength[i]
}
fish_dens_log <- log(fish_dens + 1)
drop <- c("Latitude","Longitude","SiteLength","SiteWidth","SurfaceArea")
env <- env[,!(colnames(env) %in% drop)]
env_cont <- env[,!(colnames(env) %in% c("SMU","Pop","NLCD_Cat"))]
env <- env[,!(colnames(env) %in% c("Ave_Max_D","Ann_Herb"))]
env_cont <- env_cont[,!(colnames(env_cont) %in% c("Ave_Max_D","Ann_Herb"))]
Trout_PA <- ifelse(fish$TROUT_RB > 0, "Present", "Absent")
Trout.tree <- rpart(Trout_PA ~ ., data=env_cont, minsplit=2, xval=5)
rpart.plot(Trout.tree)
plotcp(Trout.tree)
Trout.tree.prune <- prune(Trout.tree, 0.076)
rpart.plot(Trout.tree.prune)
Trout.tree2 <- rpart(fish$TROUT_RB ~ ., data=env_cont, minsplit=2, xval=5)
rpart.plot(Trout.tree2)
plotcp(Trout.tree2)
Trout.tree2.prune <- prune(Trout.tree2, 0.06)
rpart.plot(Trout.tree2.prune)
Trout.forest <- randomForest(as.factor(Trout_PA) ~ ., data=env_cont, ntree = 5000, mtry = 5, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
Trout.forest
varImpPlot(Trout.forest)
ForestData <- as.data.frame(importance(Trout.forest))
ForestData <- ForestData[order(ForestData[,1]),]
ForestData$Var.Names <- row.names(ForestData)
colnames(ForestData) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ForestData
ggplot(ForestData, aes(x=Var.Names, y=MeanDec)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=MeanDec), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
Trout.forest2 <- randomForest(fish$TROUT_RB ~ ., data=env_cont, ntree = 5000, mtry = 5, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
Trout.forest2
ForestData <- as.data.frame(importance(Trout.forest2))
ForestData <- ForestData[order(ForestData[,1]),]
ForestData$Var.Names <- row.names(ForestData)
colnames(ForestData) <- c("MeanDec","IncNodePurity","Var.Names")
ForestData
ggplot(ForestData, aes(x=Var.Names, y=MeanDec)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=MeanDec), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
varImpPlot(Trout.forest)
Trout.forest
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/multivariate-analysis")
library(vegan)
library(viridis)
library(MASSExtra)
library(ade4)
source("biostats.R")
#site-level data
#dat <- readRDS("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.rds")
dat <- readRDS("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.rds")
row.names(dat) <- dat[,1]
#dat2 <- subset(dat, year=="2024")
sals <- dat[26:27]
env <- dat[1:25]
drop <- c("lat","long","stand","tree_farm","landowner","site_id","year","weather")
env <- env[,!(colnames(env) %in% drop)]
env_cont <- env[,-1]
drop <- c("jul_date","veg_cov","fwd_cov","dwd_count","size_cl","decay_cl","char_cl","length_cl" )
env_subset <- env_cont[,!(colnames(env_cont) %in% drop)]
View(sals)
oss_PA <- ifelse(sals$oss > 0, "Present", "Absent")
oss.tree <- rpart(oss_PA ~ ., data=env_subset, minsplit=2, xval=5)
rpart.plot(oss.tree)
plotcp(oss.tree)
oss.tree.prune <- prune(oss.tree, 0.044)
rpart.plot(oss.tree.prune)
oss.forest <- randomForest(as.factor(oss_PA) ~ ., data=env_subset, ntree = 5000, mtry = 5, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
oss.forest
oss.forest
sqrt(8)
oss.forest <- randomForest(as.factor(oss_PA) ~ ., data=env_subset, ntree = 2000, mtry = 3, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
oss.forest
varImpPlot(oss.forest)
ForestData <- as.data.frame(importance(oss.forest))
ForestData <- ForestData[order(ForestData[,1]),]
ForestData$Var.Names <- row.names(ForestData)
colnames(ForestData) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ForestData
ggplot(ForestData, aes(x=Var.Names, y=MeanDec)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=MeanDec), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
oss_PA <- ifelse(sals$oss > 0, "Present", "Absent")
oss.tree <- rpart(oss_PA ~ ., data=env_subset, minsplit=2, xval=5)
rpart.plot(oss.tree)
plotcp(oss.tree)
oss.tree.prune <- prune(oss.tree, 0.044)
rpart.plot(oss.tree.prune)
oss.forest <- randomForest(as.factor(oss_PA) ~ ., data=env_subset, ntree = 5000, mtry = 5, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
oss.forest
table(oss_PA)
importance(oss.forest)
varImpPlot(oss.forest)
ForestData <- as.data.frame(importance(oss.forest))
ForestData <- ForestData[order(ForestData[,1]),]
ForestData$Var.Names <- row.names(ForestData)
colnames(ForestData) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ForestData
ggplot(ForestData, aes(x=Var.Names, y=MeanDec)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=MeanDec), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("tinytex", dependencies = TRUE)
remove.packages("tinytex")
install.packages("tinytex")
tinytex::install_tinytex()
library(vegan)
library(viridis)
setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/multivariate-analysis")
env.pca <- prcomp(env_subset, scale=TRUE)
#setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/multivariate-analysis")
setwd("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/multivariate-analysis")
source("Biostats.R")
dat2 <- readRDS("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.rds")
row.names(dat2) <- dat2[,1]
dat2 <- subset(dat2, year=="2024")
sals <- dat2[,c("oss","enes")]
drop <- c("lat","long","landowner","stand","tree_farm","year","weather","size_cl",
"length_cl","site_id","oss","enes")
env2 <- dat2[,!(colnames(dat2) %in% drop)]
env_cont <- env2[, !colnames(env2) %in% "trt"]
drop <- c("jul_date","veg_cov","fwd_cov","dwd_count","size_cl","decay_cl","char_cl","length_cl" )
env_subset <- env_cont[,!(colnames(env_cont) %in% drop)]
env.pca <- prcomp(env_subset, scale=TRUE)
summary(env.pca)
screeplot(env.pca, bstick=TRUE, main="Broken Stick of PCs")
pca.eigenvec(env.pca, dim=6, digits=3, cutoff=0.1)
biplot(env.pca, xlab="PC-1", ylab="PC-2")
site.sc <- scores(env.pca)
groups <- levels(factor(dat2$trt))
pt_col <- viridis(length(groups))
p <- ordiplot(env.pca, type="n", main="PCA of Malheur Environmental Data")
for (i in 1:length(groups)){
dim_choice <- site.sc[dat2$trt==groups[i],]
points(dim_choice[,1], dim_choice[,2],
pch=19,
cex=1.4,
col=pt_col[i])
}
text(site.sc, rownames(env_cont), pos=4, cex=0.7)
abline(v=0, lty="dotted", col="gray")
abline(h=0, lty="dotted", col="gray")
arrows(0, 0, env.pca$rotation[,1]*3, env.pca$rotation[,2]*3, lwd=2, length=0.1)
text(env.pca$rotation[,1]*3.1, env.pca$rotation[,2]*3.1, row.names(env.pca$rotation))
env.pcoa
env.pcoa <- cmdscale(env_euc,
k=5,
eig=TRUE,
add=T)
env_euc <- vegdist(env_std_subset, method="euclidean")
#env data
env_std_subset <- env_std[,c("temp","dwd_cov","soil_moist","stumps","logs","decay_cl","canopy_cov")]
env_std <- decostand(env_cont, "standardize") #Z-scores the data in each column
#env data
env_std_subset <- env_std[,c("temp","dwd_cov","soil_moist","stumps","logs","decay_cl","canopy_cov")]
env_euc <- vegdist(env_std_subset, method="euclidean")
env.pcoa <- cmdscale(env_euc,
k=5,
eig=TRUE,
add=T)
env.pcoa
100*env.pcoa$eig/sum(env.pcoa$eig)
plot(100*env.pcoa$eig/sum(env.pcoa$eig),
type="b",
lwd=2,
col="blue",
xlab="Principal Component from PCoA",
ylab="Percent variation explained",
main="Broken Stick Model")
lines(bstick(length(env.pcoa$eig))*100,
type="b",
lwd=2,
col="red")
spe.sc <- wascores(env.pcoa$points[,1:2], env_subset)
vec.sp <- envfit(as.data.frame(env.pcoa$points), env_subset, perm=1000)
spe.sc
vec.sp
knitr::opts_chunk$set(echo = TRUE)
oss_PA <- ifelse(sals$oss > 0, "Present", "Absent")
oss.tree <- rpart(oss_PA ~ ., data=env_cont, minsplit=2, xval=5)
setwd("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/multivariate-analysis")
library(vegan)
library(rpart)
library(rpart.plot)
library(party)
library(randomForest)
library(ggplot2)
source("biostats.R")
#site-level data
#dat <- readRDS("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.rds")
dat <- readRDS("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.rds")
row.names(dat) <- dat[,1]
#dat2 <- subset(dat, year=="2024")
sals <- dat[26:27]
env <- dat[1:25]
drop <- c("lat","long","stand","tree_farm","landowner","site_id","year","weather")
env <- env[,!(colnames(env) %in% drop)]
env_cont <- env[,-1]
drop <- c("jul_date","veg_cov","fwd_cov","dwd_count","size_cl","decay_cl","char_cl","length_cl" )
env_subset <- env_cont[,!(colnames(env_cont) %in% drop)]
oss_PA <- ifelse(sals$oss > 0, "Present", "Absent")
oss.tree <- rpart(oss_PA ~ ., data=env_cont, minsplit=2, xval=5)
rpart.plot(oss.tree)
plotcp(oss.tree)
oss.tree.prune <- prune(oss.tree, 0.044)
rpart.plot(oss.tree.prune)
oss.forest <- randomForest(as.factor(oss_PA) ~ ., data=env_cont, ntree = 5000, mtry = 5, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
oss.forest
