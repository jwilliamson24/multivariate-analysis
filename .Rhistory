library(rpart.plot)
library(party)
library(randomForest)
library(ggplot2)
#setwd("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/multivariate-analysis")
setwd("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/multivariate-analysis")
source("Biostats.R")
dat <- read.csv("Harney_Fishes_2007.csv", row.names = 1)
spp_N <- colSums(dat[,16:ncol(dat)])
spp_0 <- subset(spp_N, spp_N == 0)
omit <- names(spp_0)
dat2 <- dat[,!(colnames(dat) %in% omit)]
dat3 <- dat2[rowSums(dat2[,16:ncol(dat2)]) >0, ]
dat3$Herbaceous[is.na(dat3$Herbaceous)] <- 0
dat3$Ann_Herb[is.na(dat3$Ann_Herb)] <- 0
dat3 <- dat3[complete.cases(dat3$SiteLength),]
dat_final <- dat3
fish <- dat_final[,16:ncol(dat_final)]
env <- dat_final[,1:15]
fish_red <- drop.var(fish, min.fo=1)
fish_dens <- fish_red
for(i in 1:nrow(fish_red)){
fish_dens[i,] <- fish_red[i,]/dat_final$SiteLength[i]
}
fish_dens_log <- log(fish_dens + 1)
drop <- c("Latitude","Longitude","SiteLength","SiteWidth","SurfaceArea")
env <- env[,!(colnames(env) %in% drop)]
env_cont <- env[,!(colnames(env) %in% c("SMU","Pop","NLCD_Cat"))]
env <- env[,!(colnames(env) %in% c("Ave_Max_D","Ann_Herb"))]
env_cont <- env_cont[,!(colnames(env_cont) %in% c("Ave_Max_D","Ann_Herb"))]
Trout_PA <- ifelse(fish$TROUT_RB > 0, "Present", "Absent")
Trout.tree <- rpart(Trout_PA ~ ., data=env_cont, minsplit=2, xval=5)
rpart.plot(Trout.tree)
plotcp(Trout.tree)
Trout.tree.prune <- prune(Trout.tree, 0.076)
rpart.plot(Trout.tree.prune)
Trout.tree2 <- rpart(fish$TROUT_RB ~ ., data=env_cont, minsplit=2, xval=5)
rpart.plot(Trout.tree2)
plotcp(Trout.tree2)
Trout.tree2.prune <- prune(Trout.tree2, 0.06)
rpart.plot(Trout.tree2.prune)
Trout.forest <- randomForest(as.factor(Trout_PA) ~ ., data=env_cont, ntree = 5000, mtry = 5, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
Trout.forest
varImpPlot(Trout.forest)
ForestData <- as.data.frame(importance(Trout.forest))
ForestData <- ForestData[order(ForestData[,1]),]
ForestData$Var.Names <- row.names(ForestData)
colnames(ForestData) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ForestData
ggplot(ForestData, aes(x=Var.Names, y=MeanDec)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=MeanDec), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
Trout.forest2 <- randomForest(fish$TROUT_RB ~ ., data=env_cont, ntree = 5000, mtry = 5, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
Trout.forest2
ForestData <- as.data.frame(importance(Trout.forest2))
ForestData <- ForestData[order(ForestData[,1]),]
ForestData$Var.Names <- row.names(ForestData)
colnames(ForestData) <- c("MeanDec","IncNodePurity","Var.Names")
ForestData
ggplot(ForestData, aes(x=Var.Names, y=MeanDec)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=MeanDec), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
varImpPlot(Trout.forest)
Trout.forest
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/multivariate-analysis")
library(vegan)
library(viridis)
library(MASSExtra)
library(ade4)
source("biostats.R")
#site-level data
#dat <- readRDS("C:/Users/jasmi/OneDrive/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.rds")
dat <- readRDS("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.rds")
row.names(dat) <- dat[,1]
#dat2 <- subset(dat, year=="2024")
sals <- dat[26:27]
env <- dat[1:25]
drop <- c("lat","long","stand","tree_farm","landowner","site_id","year","weather")
env <- env[,!(colnames(env) %in% drop)]
env_cont <- env[,-1]
drop <- c("jul_date","veg_cov","fwd_cov","dwd_count","size_cl","decay_cl","char_cl","length_cl" )
env_subset <- env_cont[,!(colnames(env_cont) %in% drop)]
View(sals)
oss_PA <- ifelse(sals$oss > 0, "Present", "Absent")
oss.tree <- rpart(oss_PA ~ ., data=env_subset, minsplit=2, xval=5)
rpart.plot(oss.tree)
plotcp(oss.tree)
oss.tree.prune <- prune(oss.tree, 0.044)
rpart.plot(oss.tree.prune)
oss.forest <- randomForest(as.factor(oss_PA) ~ ., data=env_subset, ntree = 5000, mtry = 5, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
oss.forest
oss.forest
sqrt(8)
oss.forest <- randomForest(as.factor(oss_PA) ~ ., data=env_subset, ntree = 2000, mtry = 3, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
oss.forest
varImpPlot(oss.forest)
ForestData <- as.data.frame(importance(oss.forest))
ForestData <- ForestData[order(ForestData[,1]),]
ForestData$Var.Names <- row.names(ForestData)
colnames(ForestData) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ForestData
ggplot(ForestData, aes(x=Var.Names, y=MeanDec)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=MeanDec), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
oss_PA <- ifelse(sals$oss > 0, "Present", "Absent")
oss.tree <- rpart(oss_PA ~ ., data=env_subset, minsplit=2, xval=5)
rpart.plot(oss.tree)
plotcp(oss.tree)
oss.tree.prune <- prune(oss.tree, 0.044)
rpart.plot(oss.tree.prune)
oss.forest <- randomForest(as.factor(oss_PA) ~ ., data=env_subset, ntree = 5000, mtry = 5, importance=TRUE, keep.forest=FALSE, na.action=na.omit)
oss.forest
table(oss_PA)
importance(oss.forest)
varImpPlot(oss.forest)
ForestData <- as.data.frame(importance(oss.forest))
ForestData <- ForestData[order(ForestData[,1]),]
ForestData$Var.Names <- row.names(ForestData)
colnames(ForestData) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ForestData
ggplot(ForestData, aes(x=Var.Names, y=MeanDec)) +
geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=MeanDec), color="skyblue") +
geom_point(aes(size = IncNodePurity), color="blue", alpha=0.6) +
theme_light() +
coord_flip() +
theme(
legend.position="bottom",
panel.grid.major.y = element_blank(),
panel.border = element_blank(),
axis.ticks.y = element_blank()
)
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("tinytex")
tinytex::install_tinytex()
install.packages("tinytex", dependencies = TRUE)
remove.packages("tinytex")
install.packages("tinytex")
tinytex::install_tinytex()
rm(list=ls())
library(vegan)
library(rpart)
library(rpart.plot)
library(party)
library(randomForest)
library(ggplot2)
source("biostats.R")
setwd("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/multivariate-analysis")
source("biostats.R")
dat <- readRDS("~/Library/CloudStorage/OneDrive-Personal/Documents/Academic/OSU/Git/oss-occu/data/site_level_matrix.rds")
row.names(dat) <- dat[,1]
sals <- dat[26:27]
env <- dat[1:25]
drop <- c("lat","long","stand","tree_farm","landowner","site_id","year","weather")
env <- env[,!(colnames(env) %in% drop)]
env_cont <- env[,-1]
drop <- c("jul_date","veg_cov","fwd_cov","dwd_count","size_cl","decay_cl","char_cl","length_cl" )
env_subset <- env_cont[,!(colnames(env_cont) %in% drop)]
# sal presences absence
oss_PA <- ifelse(sals$oss > 0, "Present", "Absent")
oss.forest <- randomForest(as.factor(oss_PA) ~ ., data=env_cont, ntree = 5000, mtry = 5,
importance=TRUE, keep.forest=FALSE, na.action=na.omit)
oss.forest
table(oss_PA)
importance(oss.forest)
varImpPlot(oss.forest)
ForestData <- as.data.frame(importance(oss.forest))
ForestData <- ForestData[order(ForestData[,1]),]
ForestData$Var.Names <- row.names(ForestData)
colnames(ForestData) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ForestData
p <- ggplot(ForestData, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
p
enes_PA <- ifelse(sals$enes > 0, "Present", "Absent")
enes.forest <- randomForest(as.factor(enes_PA) ~ ., data=env_cont, ntree = 5000, mtry = 5,
importance=TRUE, keep.forest=FALSE, na.action=na.omit)
enes.forest
table(enes_PA)
importance(enes.forest)
varImpPlot(enes.forest)
ForestData2 <- as.data.frame(importance(enes.forest))
ForestData2 <- ForestData2[order(ForestData2[,1]),]
ForestData2$Var.Names <- row.names(ForestData2)
colnames(ForestData2) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ForestData2
p2 <- ggplot(ForestData2, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
p2
drop <- c("jul_date","elev")
env_subset <- env_cont[,!(colnames(env_cont) %in% drop)]
#subset of variables
#took out elevation, jul date (we already know theyre elevationally/temporally specific)
oss.forest.sub <- randomForest(as.factor(oss_PA) ~ ., data=env_subset, ntree = 5000, mtry = 5,
importance=TRUE, keep.forest=FALSE, na.action=na.omit)
ForestData.sub <- as.data.frame(importance(oss.forest.sub))
ForestData.sub <- ForestData.sub[order(ForestData.sub[,1]),]
ForestData.sub$Var.Names <- row.names(ForestData.sub)
colnames(ForestData.sub) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
#ggplot
p_sub <- ggplot(ForestData.sub, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
p_sub
#subset of variables
enes.forest.sub <- randomForest(as.factor(oss_PA) ~ ., data=env_subset, ntree = 5000, mtry = 5,
importance=TRUE, keep.forest=FALSE, na.action=na.omit)
ForestData2.sub <- as.data.frame(importance(enes.forest.sub))
ForestData2.sub <- ForestData.sub[order(ForestData2.sub[,1]),]
ForestData2.sub$Var.Names <- row.names(ForestData2.sub)
colnames(ForestData2.sub) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
#ggplot
p_sub <- ggplot(ForestData2.sub, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
#ggplot
p2_sub <- ggplot(ForestData2.sub, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
p2_sub
ossForestData <- as.data.frame(importance(oss.forest))
ossForestData <- ossForestData[order(ossForestData[,1]),]
ossForestData$Var.Names <- row.names(ossForestData)
colnames(ossForestData) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ossForestData
#ggplot
p <- ggplot(ossForestData, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
ossForestData.sub <- as.data.frame(importance(oss.forest.sub))
ossForestData.sub <- ossForestData.sub[order(ossForestData.sub[,1]),]
ossForestData.sub$Var.Names <- row.names(ossForestData.sub)
colnames(ossForestData.sub) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
ossForestData.sub <- as.data.frame(importance(oss.forest.sub))
ossForestData.sub <- ossForestData.sub[order(ossForestData.sub[,1]),]
ossForestData.sub$Var.Names <- row.names(ossForestData.sub)
colnames(ossForestData.sub) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
#ggplot
p2 <- ggplot(ossForestData.sub, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
varImpPlot(enes.forest)
enesForestData <- as.data.frame(importance(enes.forest))
enesForestData <- enesForestData[order(enesForestData[,1]),]
enesForestData$Var.Names <- row.names(enesForestData)
colnames(enesForestData) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
enesForestData
#variable importance ggplot
p3 <- ggplot(enesForestData, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
enesForestData.sub <- as.data.frame(importance(enes.forest.sub))
enesForestData.sub <- ForestData.sub[order(enesForestData.sub[,1]),]
enesForestData.sub$Var.Names <- row.names(enesForestData.sub)
colnames(enesForestData.sub) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
#ggplot
p4 <- ggplot(enesForestData.sub, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
p1
p1 <- ggplot(ossForestData, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
p1
p2
p3
p4
enesForestData.sub <- as.data.frame(importance(enes.forest.sub))
enesForestData.sub <- enesForestData.sub[order(enesForestData.sub[,1]),]
enesForestData.sub$Var.Names <- row.names(enesForestData.sub)
colnames(enesForestData.sub) <- c("Absent","Present","MeanDec","IncNodePurity","Var.Names")
#ggplot
p4 <- ggplot(enesForestData.sub, aes(x = Var.Names, y = MeanDec)) +
geom_segment(aes(x = Var.Names, xend = Var.Names, y = 0, yend = MeanDec,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
show.legend = FALSE) +
geom_point(aes(size = IncNodePurity,
color = ifelse(MeanDec > 18, "Above 18",
ifelse(MeanDec >= 10, "10-18", "Below 10"))),
alpha = 0.6) +
theme_light() +
coord_flip() +
scale_color_manual(values = c("Above 18" = "blue", "10-18" = "#66C2A5", "Below 10" = "#FFD700")) +
labs(color = "Range", size = "Node Purity") +
theme(
text = element_text(size = 14)
) +
labs(
title = "Variable Importance from Random Forest Model",
x = "Environmental Variables",
y = "Mean Decrease in Accuracy",
size = "Node Purity"
)
p4
